public class Main {
    public static void main(String[] args) {
        
        int fibNumber = 10;
        System.out.println("Fibonacci Recursive (" + fibNumber + "): " + fibonacciRecursive(fibNumber));
        System.out.println("Fibonacci Iterative (" + fibNumber + "): " + fibonacciIterative(fibNumber));
        
        
        int decimalNumber = ;50ss
        System.out.println("Decimal to Binary Recursive (" + decimalNumber + "): " + decimalToBinaryRecursive(decimalNumber));
        System.out.println("Decimal to Binary Iterative (" + decimalNumber + "): " + decimalToBinaryIterative(decimalNumber));
    }

    
    public static int fibonacciRecursive(int n) {
        if (n <= 1) {
            return n;
        }
        return fibonacciRecursive(n - 1) + fibonacciRecursive(n - 2);
    }

    
    public static int fibonacciIterative(int n) {
        if (n <= 1) {
            return n;
        }
        int a = 0, b = 1;
        for (int i = 2; i <= n; i++) {
            int temp = a + b;
            a = b;
            b = temp;
        }
        return b;
    }

    
    public static String decimalToBinaryRecursive(int n) {
        if (n == 0) {
            return "0";
        }
        if (n == 1) {
            return "1";
        }
        return decimalToBinaryRecursive(n / 2) + (n % 2);
    }

    
    public static String decimalToBinaryIterative(int n) {
        if (n == 0) {
            return "0";
        }
        StringBuilder binary = new StringBuilder();
        while (n > 0) {
            binary.insert(0, n % 2);
            n /= 2;
        }
        return binary.toString();
    }
}